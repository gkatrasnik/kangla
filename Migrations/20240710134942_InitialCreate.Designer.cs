// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kangla_backend.Model;

#nullable disable

namespace kangla_backend.Migrations
{
    [DbContext(typeof(WateringContext))]
    [Migration("20240710134942_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("kangla_backend.Model.HumidityMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SoilHumidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WateringDeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WateringDeviceId");

                    b.ToTable("HumidityMeasurements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 7, 6, 6, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 657,
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 7, 6, 7, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 349,
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2024, 7, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 472,
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2024, 7, 6, 9, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 512,
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 276,
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 6,
                            DateTime = new DateTime(2024, 7, 6, 6, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 362,
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 7,
                            DateTime = new DateTime(2024, 7, 6, 7, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 693,
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 8,
                            DateTime = new DateTime(2024, 7, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 448,
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 9,
                            DateTime = new DateTime(2024, 7, 6, 9, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 275,
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 10,
                            DateTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 508,
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 11,
                            DateTime = new DateTime(2024, 7, 6, 6, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 731,
                            WateringDeviceId = 3
                        },
                        new
                        {
                            Id = 12,
                            DateTime = new DateTime(2024, 7, 6, 7, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 371,
                            WateringDeviceId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateTime = new DateTime(2024, 7, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 689,
                            WateringDeviceId = 3
                        },
                        new
                        {
                            Id = 14,
                            DateTime = new DateTime(2024, 7, 6, 9, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 381,
                            WateringDeviceId = 3
                        },
                        new
                        {
                            Id = 15,
                            DateTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Utc),
                            SoilHumidity = 585,
                            WateringDeviceId = 3
                        });
                });

            modelBuilder.Entity("kangla_backend.Model.WateringDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceToken")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastWatered")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MinimumSoilHumidity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("WaterNow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WateringDurationSetting")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WateringIntervalSetting")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WateringDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Deleted = false,
                            Description = "First watering device",
                            DeviceToken = "abcdefghi0",
                            LastWatered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Garden",
                            MinimumSoilHumidity = 400,
                            Name = "Device 1",
                            Notes = "Needs regular maintenance",
                            WaterNow = false,
                            WateringDurationSetting = 5,
                            WateringIntervalSetting = 30
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Deleted = false,
                            Description = "Second watering device",
                            DeviceToken = "abcdefghi1",
                            LastWatered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Greenhouse",
                            MinimumSoilHumidity = 400,
                            Name = "Device 2",
                            Notes = "Check humidity levels",
                            WaterNow = true,
                            WateringDurationSetting = 4,
                            WateringIntervalSetting = 20
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Deleted = false,
                            Description = "Third watering device",
                            DeviceToken = "abcdefghi2",
                            LastWatered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Front Yard",
                            MinimumSoilHumidity = 400,
                            Name = "Device 3",
                            Notes = "Monitor water usage",
                            WaterNow = false,
                            WateringDurationSetting = 3,
                            WateringIntervalSetting = 25
                        });
                });

            modelBuilder.Entity("kangla_backend.Model.WateringEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int>("WateringDeviceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WateringDeviceId");

                    b.ToTable("WateringEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2024, 7, 6, 8, 5, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 2,
                            End = new DateTime(2024, 7, 7, 8, 5, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 7, 8, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 1
                        },
                        new
                        {
                            Id = 3,
                            End = new DateTime(2024, 7, 6, 9, 4, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 6, 9, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 4,
                            End = new DateTime(2024, 7, 7, 9, 4, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 7, 9, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 2
                        },
                        new
                        {
                            Id = 5,
                            End = new DateTime(2024, 7, 6, 10, 3, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 3
                        },
                        new
                        {
                            Id = 6,
                            End = new DateTime(2024, 7, 7, 10, 3, 0, 0, DateTimeKind.Utc),
                            Start = new DateTime(2024, 7, 7, 10, 0, 0, 0, DateTimeKind.Utc),
                            WateringDeviceId = 3
                        });
                });

            modelBuilder.Entity("kangla_backend.Model.HumidityMeasurement", b =>
                {
                    b.HasOne("kangla_backend.Model.WateringDevice", "WateringDevice")
                        .WithMany("HumidityMeasurement")
                        .HasForeignKey("WateringDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WateringDevice");
                });

            modelBuilder.Entity("kangla_backend.Model.WateringEvent", b =>
                {
                    b.HasOne("kangla_backend.Model.WateringDevice", "WateringDevice")
                        .WithMany("WateringEvents")
                        .HasForeignKey("WateringDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WateringDevice");
                });

            modelBuilder.Entity("kangla_backend.Model.WateringDevice", b =>
                {
                    b.Navigation("HumidityMeasurement");

                    b.Navigation("WateringEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
